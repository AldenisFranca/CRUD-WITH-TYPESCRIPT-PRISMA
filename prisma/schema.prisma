// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Aluno {
  id             Int           @id @default(autoincrement())
  nome           String
  dataNascimento DateTime      @default(now())
  cpf            String        @unique
  email          String        @unique
  celular        String
  telefone       String
  sexo           String
  solicitacoes   Solicitacao[]
  endereco       Endereco      @relation(fields: [enderecoId], references: [id])
  enderecoId     Int
  Curso          Curso?        @relation(fields: [cursoId], references: [id])
  cursoId        Int?
}

model Professor {
  id             Int            @id @default(autoincrement())
  nome           String
  dataNascimento DateTime       @default(now())
  cpf            String         @unique
  email          String         @unique
  celular        String
  telefone       String
  sexo           String
  endereco       Endereco       @relation(fields: [enderecoId], references: [id])
  enderecoId     Int
  disciplinas    Disciplina[]
  qualificacoes  Qualificacao[]
  solicitacoes   Solicitacao[]
}

model Curso {
  id          Int     @id @default(autoincrement())
  descricao   String
  instituicao String
  periodo     String
  alunos      Aluno[]
}

model Endereco {
  id          Int         @id @default(autoincrement())
  logradouro  String
  complemento String
  numero      String
  bairro      String
  cidade      String
  estado      String
  cep         String
  Aluno       Aluno[]
  Professor   Professor[]
}

model Qualificacao {
  id             Int       @id @default(autoincrement())
  formacao       String
  especializacao String
  Professor      Professor @relation(fields: [professorId], references: [id])
  professorId    Int
}

model Disciplina {
  id          Int           @id @default(autoincrement())
  descricao   String
  horaAula    String
  Professor   Professor?    @relation(fields: [professorId], references: [id])
  professorId Int?
  Solicitacao Solicitacao[]
}

model Solicitacao {
  id              Int        @id @default(autoincrement())
  data            DateTime   @default(now())
  status          String     @default("Pendente")
  horarioAgendado DateTime
  assunto         String
  Aluno           Aluno      @relation(fields: [alunoId], references: [id])
  alunoId         Int
  Professor       Professor? @relation(fields: [professorId], references: [id])
  professorId     Int?
  disciplina      Disciplina @relation(fields: [disciplinaId], references: [id])
  disciplinaId    Int
}
